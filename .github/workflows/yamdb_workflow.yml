name: Django-app workflow
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with: 
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-isort
        pip install -r api_yamdb/requirements.txt
    - name: Django  and flake tests
      run: |
        python -m flake8
        pytest

  build_and_push_to_dockerHub:
    name: Push image to Docker
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.DOCK_PASSWORD }}
    - name: Build and push to Docker
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: nentron/yamdb_final:latest
        file: api_yamdb/Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_dockerHub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker-compose stop
          sudo docker-compose rm web
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT}} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
